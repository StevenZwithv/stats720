---
title: "STATS 720 - HW5"
author: "Steven Zeng"
date: "Dec/13/2023"
format: html
editor: visual
---

```{r load_libraries}
#| message: false
library(ggeffects) # for ggemmeans
library(mgcv)
library(lme4)
library(broom)
library(broom.mixed)
library(dotwhisker)
library(mlmRev) # for contraception data
library(tidyverse)
```

# 1.  

## Data Transformation
```{r data_trans}
binom_sum <- function(x, alpha = 0.05) {
    n <- length(x); x <- sum(x)
    est <- x/n
    lwr <- qbeta(alpha/2, x, n-x+1)
    zvals <- !is.na(x) & x == 0
    nvals <- !is.na(x) & x == n
    lwr[zvals] <- 0
    lwr[nvals] <- (alpha/2)^(1/n[nvals])
    upr <- qbeta(1-alpha/2, x+1, n-x)
    upr[zvals] <- 1-(alpha/2)^(1/n[zvals])
    upr[nvals] <- 1
    data.frame(y=est, ymin=lwr, ymax=upr)
}


Contraception <- transform(Contraception,use_n = as.numeric(use) - 1,age_sc = drop(scale(age)))


ssb <- ggplot2::stat_summary_bin(data = Contraception,fun.data = binom_sum,bins = 10,
geom = "pointrange", ## displace urban/rural bars slightly
position = ggplot2::position_dodge(width = 0.05),mapping = ggplot2::aes(x = age_sc, y = use_n, colour = urban),fill = NA)

```



## Model Fitting.
```{r model_fit}
# fit using glmer()
con.glmer <- glmer(use_n~age_sc+urban+age_sc:urban+(1|district),data=Contraception,family=binomial)

# fit using gam()
con.gam <- gam(use_n~age_sc+urban+age_sc:urban+s(district,bs="re"),data=Contraception,family=binomial)

# Compare the results
#summary(con.glmer)
#summary(con.gam)
```

According to the below graph, we can observe that the fixed effects estimates and C.I. for models generated by glmer() and gam() are very similar.


```{r model_comparison}
dwplot(list(con.glmer,con.gam),effects="fixed")
```



# 2.  

## Model Fitting

Looking at the predictions plots below, two plots look very similar except that the plot fitted age as a thin plate spline has a more tilted tails when approaching the left end and right end of scaled age values.  
```{r model_fit}
con.gam2 <- gam(use_n~poly(age_sc,2)+urban+s(district,bs="re"),family=binomial,data=Contraception)

con.gam3 <- gam(use_n~s(age_sc,bs="tp")+s(district,bs="re")+urban,family=binomial,data=Contraception)

# if separately plotting
plot1 <- plot(ggemmeans(con.gam2,terms=c("age_sc [all]","urban"))) + ssb

plot2 <- plot(ggemmeans(con.gam3,terms=c("age_sc [all]","urban"))) + ssb

```


# 3.  

## Model Fitting  

Similarly, we can see from the below plots that they look very similar except that the model which separates thin-plate splines for age_sc for urban and rural settings has slightly tilted tails on the left most and right most age values.   

```{r model_fit}
con.gam4 <- gam(use_n~poly(age_sc,2)+urban+s(district,bs="re")+poly(age_sc,2):urban,family=binomial,data=Contraception)

con.gam5 <- gam(use_n~s(age_sc,bs="tp",by=urban)+s(district,bs="re")+urban,family=binomial,data=Contraception)

plot3 <- plot(ggemmeans(con.gam4,terms=c("age_sc [all]","urban"))) + ssb
  
plot4 <- plot(ggemmeans(con.gam5,terms=c("age_sc [all]","urban"))) + ssb
```


# 4.  

## Model Fitting  

As we can tell from the graphs below, the model that includes a fixed quadratic-age by urban/rural interaction and a random effect that allows the quadratic effect of age to vary across districts leads to a more condensed fit and a more extreme tilted fit when approaching the left most and right most scaled age values. However, in my opinion they look quite similar.     
```{r model_fit, cache=TRUE}
con.glmer2 <- glmer(use_n~poly(age_sc,2):urban+(poly(age_sc,2)|district),family=binomial,data=Contraception)

con.gam6 <- gam(use_n~s(age_sc, district, bs = "fs")+s(age_sc,by=urban,bs="tp"),family=binomial,data=Contraception)

# new data
nd <- with(Contraception, expand.grid(urban =levels(urban),age_sc=unique(age_sc),district = unique(district)))

model3 <- predict(con.glmer2,newdata=nd,type="response")

model4 <- predict(con.gam6,newdata=nd,type="response")

tb1 <- cbind(nd,predict=model3) %>% as_tibble()

tb2 <- cbind(nd,predict=model4) %>% as_tibble()

# plot for first model
ggplot(data=tb1) + geom_line(aes(x=age_sc,y=predict,group = interaction(district, urban),color=urban),alpha=1/3)

# plot for second model
ggplot(data=tb2) + geom_line(aes(x=age_sc,y=predict,group = interaction(district, urban),color=urban),alpha=1/3)

# plotted together
ggplot() + geom_line(data=tb1,aes(x=age_sc,y=predict,group = interaction(district, urban)),color="green",alpha=1/3) + 
  geom_line(data=tb2,aes(x=age_sc,y=predict,group = interaction(district, urban)),color="orange",alpha=1/3) + xlab("age (scaled)") + ylab("Predicted probabilities")
```

Moreover, when we isolate urban/rural we can see that the model fitted by `gam()` which includes different population-level smooths for urban vs. rural is more flat out than the model fitted using `glmer()`.

```{r isolate}
# isolate urban and rural 
tb1 %>% filter(urban=="Y") %>% ggplot() + geom_line(aes(x=age_sc,y=predict,group=interaction(district,urban)),color="red",alpha=1/3) + geom_line(data=filter(tb2,urban=="Y"),aes(x=age_sc,y=predict,group=interaction(district,urban)),color="green",alpha=1/3)+ xlab("age (scaled)") + ylab("Predicted probabilities")

# isolate urban and rural 
tb1 %>% filter(urban=="N") %>% ggplot() + geom_line(aes(x=age_sc,y=predict,group=interaction(district,urban)),color="red",alpha=1/3) + geom_line(data=filter(tb2,urban=="N"),aes(x=age_sc,y=predict,group=interaction(district,urban)),color="green",alpha=1/3)+ xlab("age (scaled)") + ylab("Predicted probabilities")
```







